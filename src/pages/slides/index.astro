---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { getPresentations } from "@/lib/content";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Calendar, Presentation, ArrowRight } from "lucide-react";

const title = "Slides - Andrei Voinea";
const description = "Technical presentations and workshops on software engineering topics.";

const presentations = await getPresentations();
// Filter out presentations without valid dates
const validPresentations = presentations.filter((p) => p.date && p.date.trim() !== "");
const sortedPresentations = validPresentations.sort(
  (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()
);
---

<BaseLayout title={title} description={description}>
  <div class="flex min-h-screen flex-col">
    <Header />
    <main class="bg-background flex-1">
      <div class="mx-auto max-w-7xl px-4 py-12 sm:px-6 lg:px-8 lg:py-16">
        {/* Header Section */}
        <div class="mb-16 text-center">
          <h1 class="mb-4 text-4xl font-bold md:text-5xl">Slides</h1>
          <p class="text-muted-foreground mx-auto max-w-2xl text-lg">
            Technical presentations and workshops on software engineering, blockchain, and modern
            development practices.
          </p>
        </div>

        {/* Presentations Grid */}
        <div class="mx-auto max-w-4xl">
          <div class="grid gap-6 md:gap-8">
            {
              sortedPresentations.map((presentation) => (
                <a
                  href={`/slides/${presentation.slug}`}
                  class="group focus-visible:ring-primary block rounded-lg focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2"
                >
                  <Card className="hover:shadow-lg hover:border-primary/50 transition-all duration-300 cursor-pointer overflow-hidden h-full">
                    <CardHeader className="pb-4">
                      <div class="flex items-start justify-between gap-4">
                        <div class="flex-1">
                          <div class="mb-3 flex items-center gap-3">
                            <div class="bg-primary/10 rounded-lg p-2">
                              <Presentation className="h-5 w-5 text-primary" />
                            </div>
                            <CardTitle className="text-2xl group-hover:text-primary transition-colors">
                              {presentation.title}
                            </CardTitle>
                          </div>
                          <div class="text-muted-foreground flex items-center gap-2 text-sm">
                            <Calendar className="h-4 w-4" />
                            <time datetime={presentation.date}>
                              {new Date(presentation.date).toLocaleDateString("en-US", {
                                year: "numeric",
                                month: "long",
                                day: "numeric",
                              })}
                            </time>
                          </div>
                        </div>
                        <ArrowRight className="h-5 w-5 text-muted-foreground group-hover:text-primary group-hover:translate-x-1 transition-all duration-300 flex-shrink-0 mt-2" />
                      </div>
                    </CardHeader>
                    {presentation.description && (
                      <CardContent>
                        <p class="text-muted-foreground leading-relaxed">
                          {presentation.description}
                        </p>
                      </CardContent>
                    )}
                  </Card>
                </a>
              ))
            }
          </div>
        </div>
      </div>
    </main>
    <Footer />
  </div>
</BaseLayout>
