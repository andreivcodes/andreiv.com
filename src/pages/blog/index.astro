---
import BaseLayout from '@/layouts/BaseLayout.astro';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import { getBlogPosts } from '@/lib/content';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';
import { ArrowRight } from 'lucide-react';

const title = "Blog - Andrei Voinea";
const description = "Thoughts and writings from Andrei Voinea on software engineering and building in the open.";

const posts = await getBlogPosts();
const sortedPosts = posts.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

// Group posts by year
const postsByYear = sortedPosts.reduce((acc, post) => {
  const year = new Date(post.date).getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {} as Record<number, typeof sortedPosts>);

const years = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));
---

<BaseLayout title={title} description={description}>
  <div class="min-h-screen flex flex-col">
    <Header />
    <main class="flex-1 bg-background">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 lg:py-16">
        {/* Header Section */}
        <div class="text-center mb-16">
          <h1 class="text-4xl md:text-5xl font-bold mb-4">Blog</h1>
          <p class="text-muted-foreground text-lg max-w-2xl mx-auto">
            Thoughts and writings on software engineering and building in the open.
          </p>
        </div>
        
        {/* Blog Posts List */}
        <div class="max-w-3xl mx-auto">
          <div class="flex flex-col gap-12">
            {years.map((year) => (
              <section class="relative">
                {/* Year header with sticky positioning */}
                <div class="sticky top-0 z-10 -mx-4 md:-mx-8 px-4 md:px-8 py-2 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 border-b mb-6">
                  <h2 class="text-2xl font-bold font-mono">{year}</h2>
                </div>
              
              <div class="flex flex-col gap-4">
                {postsByYear[Number(year)].map((post) => (
                  <a href={`/blog/${post.slug}`} class="group focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 rounded-lg block">
                    <Card className="hover:shadow-lg hover:border-primary/50 transition-all duration-300 cursor-pointer overflow-hidden">
                      <CardHeader>
                        <div class="flex items-start justify-between gap-4">
                          <div class="flex-1">
                            <CardTitle className="text-xl group-hover:text-primary transition-colors">
                              {post.title}
                            </CardTitle>
                            <p class="text-sm text-muted-foreground mt-1">
                              {new Date(post.date).toLocaleDateString('en-US', { 
                                month: 'long', 
                                day: 'numeric' 
                              })}
                              {' Â· '}
                              {Math.ceil(post.wordCount / 200)} min read
                            </p>
                          </div>
                          <ArrowRight className="h-5 w-5 text-muted-foreground group-hover:text-primary group-hover:translate-x-1 transition-all duration-300 flex-shrink-0 mt-1" />
                        </div>
                      </CardHeader>
                      <CardContent>
                        <p class="text-muted-foreground line-clamp-2 mb-2">{post.short}</p>
                        <p class="text-sm text-muted-foreground/70 line-clamp-2 italic">{post.preview}</p>
                      </CardContent>
                    </Card>
                  </a>
                ))}
              </div>
            </section>
          ))}
          </div>
        </div>
      </div>
    </main>
    <Footer />
  </div>
</BaseLayout>