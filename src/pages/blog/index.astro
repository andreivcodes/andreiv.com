---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { getBlogPosts } from "@/lib/content";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { ArrowRight } from "lucide-react";

const title = "Blog - Andrei Voinea";
const description =
  "Thoughts and writings from Andrei Voinea on software engineering and building in the open.";

const posts = await getBlogPosts();
const sortedPosts = posts.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

// Group posts by year
const postsByYear = sortedPosts.reduce(
  (acc, post) => {
    const year = new Date(post.date).getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  },
  {} as Record<number, typeof sortedPosts>
);

const years = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));
---

<BaseLayout title={title} description={description}>
  <div class="flex min-h-screen flex-col">
    <Header />
    <main class="bg-background flex-1">
      <div class="mx-auto max-w-7xl px-4 py-12 sm:px-6 lg:px-8 lg:py-16">
        {/* Header Section */}
        <div class="mb-16 text-center">
          <h1 class="mb-4 text-4xl font-bold md:text-5xl">Blog</h1>
          <p class="text-muted-foreground mx-auto max-w-2xl text-lg">
            Thoughts, writings and rants.
          </p>
        </div>

        {/* Blog Posts List */}
        <div class="mx-auto max-w-3xl">
          <div class="flex flex-col gap-12">
            {
              years.map((year) => (
                <section class="relative">
                  {/* Year header with sticky positioning */}
                  <div class="bg-background/95 supports-[backdrop-filter]:bg-background/60 sticky top-0 z-10 -mx-4 mb-6 border-b px-4 py-2 backdrop-blur md:-mx-8 md:px-8">
                    <h2 class="font-mono text-2xl font-bold">{year}</h2>
                  </div>

                  <div class="flex flex-col gap-4">
                    {postsByYear[Number(year)].map((post) => (
                      <a
                        href={`/blog/${post.slug}`}
                        class="group focus-visible:ring-primary block rounded-lg focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2"
                      >
                        <Card className="hover:shadow-lg hover:border-primary/50 transition-all duration-300 cursor-pointer overflow-hidden">
                          <CardHeader>
                            <div class="flex items-start justify-between gap-4">
                              <div class="flex-1">
                                <CardTitle className="text-xl group-hover:text-primary transition-colors">
                                  {post.title}
                                </CardTitle>
                                <p class="text-muted-foreground mt-1 text-sm">
                                  {new Date(post.date).toLocaleDateString("en-US", {
                                    month: "long",
                                    day: "numeric",
                                  })}
                                  {" Â· "}
                                  {Math.ceil(post.wordCount / 200)} min read
                                </p>
                              </div>
                              <ArrowRight className="h-5 w-5 text-muted-foreground group-hover:text-primary group-hover:translate-x-1 transition-all duration-300 flex-shrink-0 mt-1" />
                            </div>
                          </CardHeader>
                          <CardContent>
                            <p class="text-muted-foreground mb-2 line-clamp-2">{post.short}</p>
                            <p class="text-muted-foreground/70 line-clamp-2 text-sm italic">
                              {post.preview}
                            </p>
                          </CardContent>
                        </Card>
                      </a>
                    ))}
                  </div>
                </section>
              ))
            }
          </div>
        </div>
      </div>
    </main>
    <Footer />
  </div>
</BaseLayout>
