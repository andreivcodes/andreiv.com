---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { getCollection } from "astro:content";
import { ArrowLeft } from "lucide-react";
import { TableOfContents } from "@/components/TableOfContents";
import { ReadingProgress } from "@/components/ReadingProgress";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

const title = `${post.data.title} - Andrei Voinea`;
const description = post.data.short;
const wordCount = post.body.split(/\s+/).length;
const readingTime = Math.ceil(wordCount / 200);
---

<BaseLayout title={title} description={description}>
  <div class="flex min-h-screen flex-col">
    <ReadingProgress client:load />
    <Header />
    <main class="relative flex-1">
      <div class="mx-auto max-w-4xl px-4 md:px-8">
        {/* Breadcrumb navigation */}
        <nav class="py-8">
          <a
            href="/blog"
            class="text-muted-foreground hover:text-foreground group inline-flex items-center gap-2 text-sm transition-colors"
          >
            <ArrowLeft className="h-4 w-4 transition-transform group-hover:-translate-x-1" />
            <span>Back to all posts</span>
          </a>
        </nav>

        <article>
          {/* Article Header */}
          <header class="mb-12 border-b pb-8">
            <h1 class="mb-6 text-3xl leading-tight font-bold md:text-5xl">{post.data.title}</h1>

            <div class="text-muted-foreground flex flex-wrap items-center gap-4 text-sm md:gap-6">
              <div class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <rect width="18" height="18" x="3" y="4" rx="2" ry="2"></rect>
                  <line x1="16" x2="16" y1="2" y2="6"></line>
                  <line x1="8" x2="8" y1="2" y2="6"></line>
                  <line x1="3" x2="21" y1="10" y2="10"></line>
                </svg>
                <time datetime={post.data.date.toISOString()}>
                  {
                    new Date(post.data.date).toLocaleDateString("en-US", {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })
                  }
                </time>
              </div>

              <div class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <circle cx="12" cy="12" r="10"></circle>
                  <polyline points="12 6 12 12 16 14"></polyline>
                </svg>
                <span>{readingTime} min read</span>
              </div>

              <div class="flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M12 20h9"></path>
                  <path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path>
                </svg>
                <span>{wordCount.toLocaleString()} words</span>
              </div>
            </div>

            {/* Article description/summary */}
            <p class="text-muted-foreground mt-6 text-lg leading-relaxed">
              {post.data.short}
            </p>
          </header>

          {/* Article Content */}
          <div
            class="[&>pre]:bg-muted [&>:not(pre)>code]:bg-muted [&>blockquote]:border-primary/50 [&>blockquote]:text-muted-foreground [&>th]:border-border [&>th]:bg-muted [&>td]:border-border [&>a]:text-primary [&>a]:hover:text-primary/80 [&>a]:decoration-primary/30 [&>a]:hover:decoration-primary/60 [&_a]:text-primary [&_a]:hover:text-primary/80 [&_a]:decoration-primary/30 [&_a]:hover:decoration-primary/60 [&>hr]:border-border [&>kbd]:bg-muted [&>kbd]:border-border blog-post-content mb-16 max-w-none text-lg leading-relaxed [&_a]:font-medium [&_a]:underline [&_a]:underline-offset-4 [&_a]:transition-all [&_a]:duration-200 [&>.task-list-item]:list-none [&>.task-list-item>input]:mr-2 [&>:not(pre)>code]:rounded [&>:not(pre)>code]:px-1.5 [&>:not(pre)>code]:py-0.5 [&>:not(pre)>code]:font-mono [&>:not(pre)>code]:text-sm [&>a]:font-medium [&>a]:underline [&>a]:underline-offset-4 [&>a]:transition-all [&>a]:duration-200 [&>blockquote]:mb-4 [&>blockquote]:border-l-4 [&>blockquote]:pl-4 [&>blockquote]:italic [&>em]:italic [&>h1]:mt-12 [&>h1]:mb-6 [&>h1]:text-left [&>h1]:text-3xl [&>h1]:font-bold max-md:[&>h1]:text-2xl [&>h1+p]:mt-0 [&>h2]:mt-10 [&>h2]:mb-4 [&>h2]:border-b [&>h2]:pb-2 [&>h2]:text-left [&>h2]:text-2xl [&>h2]:font-semibold max-md:[&>h2]:text-xl [&>h2+p]:mt-0 [&>h3]:mt-8 [&>h3]:mb-3 [&>h3]:text-left [&>h3]:text-xl [&>h3]:font-semibold max-md:[&>h3]:text-lg [&>h3+p]:mt-0 [&>h4]:mt-6 [&>h4]:mb-2 [&>h4]:text-left [&>h4]:text-lg [&>h4]:font-semibold [&>h4+p]:mt-0 [&>hr]:my-8 [&>hr]:border-t [&>img]:mx-auto [&>img]:my-6 [&>img]:h-auto [&>img]:max-w-full [&>img]:rounded-lg [&>img]:shadow-md [&>kbd]:rounded [&>kbd]:border [&>kbd]:px-1.5 [&>kbd]:py-0.5 [&>kbd]:font-mono [&>kbd]:text-sm [&>li]:leading-relaxed [&>li>ol]:mt-2 [&>li>ol]:ml-6 [&>li>ul]:mt-2 [&>li>ul]:ml-6 [&>ol]:mb-4 [&>ol]:list-inside [&>ol]:list-decimal [&>ol]:space-y-2 [&>ol]:pl-4 [&>ol]:text-left [&>p]:mb-4 [&>p]:text-left [&>p]:leading-relaxed [&>pre]:mb-4 [&>pre]:overflow-x-auto [&>pre]:rounded-lg [&>pre]:p-4 [&>pre]:font-mono [&>pre]:text-sm [&>pre>code]:bg-transparent [&>pre>code]:p-0 [&>strong]:font-semibold [&>table]:mb-4 [&>table]:w-full [&>table]:border-collapse [&>table]:overflow-x-auto [&>td]:border [&>td]:px-4 [&>td]:py-2 [&>td]:text-left [&>th]:border [&>th]:px-4 [&>th]:py-2 [&>th]:text-left [&>th]:font-semibold [&>ul]:mb-4 [&>ul]:list-inside [&>ul]:list-disc [&>ul]:space-y-2 [&>ul]:pl-4 [&>ul]:text-left"
          >
            <Content />
          </div>

          {/* Article Footer */}
          <footer class="mt-12 mb-16 border-t pt-8">
            <div class="flex items-center justify-between">
              <a
                href="/blog"
                class="text-muted-foreground hover:text-foreground group inline-flex items-center gap-2 text-sm transition-colors"
              >
                <ArrowLeft className="h-4 w-4 transition-transform group-hover:-translate-x-1" />
                <span>Back to all posts</span>
              </a>

              <button
                onclick="window.scrollTo({ top: 0, behavior: 'smooth' })"
                class="text-muted-foreground hover:text-foreground group inline-flex items-center gap-2 text-sm transition-colors"
              >
                <span>Back to top</span>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="transition-transform group-hover:-translate-y-1"
                >
                  <line x1="12" x2="12" y1="19" y2="5"></line>
                  <polyline points="5 12 12 5 19 12"></polyline>
                </svg>
              </button>
            </div>
          </footer>
        </article>
      </div>

      <TableOfContents client:media="(min-width: 1280px)" />
    </main>
    <Footer />
  </div>
</BaseLayout>

<script>
  // Add IDs to headings for table of contents
  document.addEventListener("DOMContentLoaded", () => {
    const headings = document.querySelectorAll(".blog-post-content h2, .blog-post-content h3");
    headings.forEach((heading) => {
      if (!heading.id) {
        heading.id =
          heading.textContent
            ?.toLowerCase()
            .replace(/[^\w\s-]/g, "")
            .replace(/\s+/g, "-") || "";
      }
    });
  });

  // Enhanced code block functionality
  document.addEventListener("DOMContentLoaded", () => {
    const codeBlocks = document.querySelectorAll("pre code");
    codeBlocks.forEach((block) => {
      const pre = block.parentElement;
      if (!pre) return;

      // Create wrapper
      const wrapper = document.createElement("div");
      wrapper.className = "relative group";
      pre.parentNode?.insertBefore(wrapper, pre);
      wrapper.appendChild(pre);

      // Add copy button
      const copyButton = document.createElement("button");
      copyButton.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <rect width="14" height="14" x="8" y="8" rx="2" ry="2"/>
          <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"/>
        </svg>
      `;
      copyButton.className =
        "absolute top-2 right-2 p-1.5 rounded text-muted-foreground hover:text-foreground hover:bg-muted/50 opacity-0 group-hover:opacity-100 transition-all duration-200";
      copyButton.setAttribute("aria-label", "Copy code");

      copyButton.addEventListener("click", async () => {
        const code = block.textContent || "";
        await navigator.clipboard.writeText(code);

        // Show feedback
        copyButton.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M20 6 9 17l-5-5"/>
          </svg>
        `;

        setTimeout(() => {
          copyButton.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <rect width="14" height="14" x="8" y="8" rx="2" ry="2"/>
              <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"/>
            </svg>
          `;
        }, 2000);
      });

      wrapper.appendChild(copyButton);
    });
  });
</script>
