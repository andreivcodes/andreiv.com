---
import BaseLayout from '@/layouts/BaseLayout.astro';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import { getCollection } from 'astro:content';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { ArrowLeft, ExternalLink } from 'lucide-react';
import { GithubIcon } from '@/components/icons/GithubIcon';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
const { Content } = await project.render();

const title = `${project.data.name} - Andrei Voinea`;
const description = project.data.shortDescription;
---

<BaseLayout title={title} description={description}>
  <div class="min-h-screen flex flex-col">
    <Header />
    <main class="flex-1 flex justify-center">
      <article class="flex w-full max-w-3xl h-full flex-col p-4 md:p-8 gap-8">
        <div class="flex items-center gap-4 mb-4">
          <a href="/projects">
            <Button variant="ghost" size="icon">
              <ArrowLeft className="h-4 w-4" />
            </Button>
          </a>
          <span class="text-sm text-muted-foreground">Back to Projects</span>
        </div>

        <header class="mb-8">
          <h1 class="text-4xl font-bold mb-4">{project.data.name}</h1>
          <p class="text-lg text-muted-foreground mb-4">{project.data.shortDescription}</p>
          
          <div class="flex flex-wrap gap-2 mb-4">
            {project.data.stackPrimary?.map((tech) => (
              <Badge variant="default">{tech}</Badge>
            ))}
            {project.data.stackSecondary?.map((tech) => (
              <Badge variant="secondary">{tech}</Badge>
            ))}
          </div>

          <div class="flex gap-4">
            {project.data.url && (
              <a 
                href={project.data.url} 
                target="_blank" 
                rel="noopener noreferrer"
              >
                <Button variant="outline" size="sm">
                  <ExternalLink className="h-4 w-4 mr-2" />
                  Live Demo
                </Button>
              </a>
            )}
            {project.data.repository && (
              <a 
                href={project.data.repository} 
                target="_blank" 
                rel="noopener noreferrer"
              >
                <Button variant="outline" size="sm">
                  <GithubIcon className="h-4 w-4 mr-2" />
                  Source Code
                </Button>
              </a>
            )}
          </div>
        </header>

        <div class="prose prose-neutral max-w-none">
          <Content />
        </div>
      </article>
    </main>
    <Footer />
  </div>
</BaseLayout>