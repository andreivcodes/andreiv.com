---
import BaseLayout from '@/layouts/BaseLayout.astro';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import { getProjects } from '@/lib/content';
import { Badge } from '@/components/ui/badge';
import { ExternalLink, ArrowRight, Calendar } from 'lucide-react';
import { GitHubLogoIcon } from '@radix-ui/react-icons';

const title = "Projects - Andrei Voinea";
const description = "Open source projects and side projects built by Andrei Voinea.";

const projects = await getProjects();
const sortedProjects = projects.sort((a, b) => (a.index || 999) - (b.index || 999));
---

<BaseLayout title={title} description={description}>
  <Fragment slot="head">
    {sortedProjects.map((project) => 
      project.featuredImage && (
        <link 
          rel="preload" 
          as="image" 
          href={project.featuredImage}
        />
      )
    )}
  </Fragment>
  <div class="min-h-screen flex flex-col">
    <Header />
    <main class="flex-1 bg-background">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 lg:py-16">
        {/* Header Section */}
        <div class="text-center mb-16">
          <h1 class="text-4xl md:text-5xl font-bold mb-4">Projects</h1>
          <p class="text-muted-foreground text-lg max-w-2xl mx-auto">
            A collection of projects and experiments I've been working on.
          </p>
        </div>

        {/* Projects List */}
        <div class="space-y-12 lg:space-y-16">
          {sortedProjects.map((project) => (
            <a
              href={`/projects/${project.slug}`}
              class="block group focus:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 rounded-lg"
            >
              <article class="relative overflow-hidden">
                <div class="relative flex flex-col xl:grid xl:grid-cols-2 bg-card rounded-lg border overflow-hidden transition-all duration-300 hover:shadow-lg hover:border-primary/50">
                    {/* Image Section - On top for mobile, right for desktop */}
                    <div class="relative overflow-hidden xl:order-2">
                      <div class="aspect-[16/9] w-full bg-muted/20 relative">
                      {project.featuredImage ? (
                        <>
                          <img
                            src={project.featuredImage}
                            alt={`${project.name} preview`}
                            class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                            loading="eager"
                            width="800"
                            height="450"
                          />
                          {/* Black gradient overlay on hover */}
                          <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                        </>
                      ) : (
                        <div class="w-full h-full bg-gradient-to-br from-muted via-muted/80 to-background flex items-center justify-center">
                          <div class="text-7xl font-bold text-muted-foreground/10">
                            {project.name.slice(0, 2).toUpperCase()}
                          </div>
                        </div>
                      )}
                      </div>
                    </div>

                    {/* Content Section - Below image on mobile, left on desktop */}
                    <div class="relative p-8 flex flex-col justify-between xl:order-1 min-h-[300px]">
                      {/* Top section with title and content */}
                      <div>
                        {/* Project Title & Date */}
                        <div class="mb-6">
                        <h2 class="text-3xl xl:text-4xl font-bold mb-3 transition-colors duration-300 group-hover:text-primary -mt-1">
                          {project.name}
                        </h2>
                        <div class="flex items-center gap-2 text-sm text-muted-foreground">
                          <Calendar className="h-4 w-4" />
                          <time datetime={project.date}>{project.date}</time>
                        </div>
                      </div>

                      {/* Description */}
                      <p class="text-muted-foreground text-lg leading-relaxed mb-8">
                        {project.shortDescription}
                      </p>

                      {/* Tech Stack */}
                      <div class="flex flex-wrap gap-2">
                        {project.stackPrimary?.map((tech) => (
                          <Badge
                            variant="default"
                            className="text-xs px-2 py-1 rounded-full pointer-events-none"
                          >
                            {tech}
                          </Badge>
                        ))}
                        {project.stackSecondary?.map((tech) => (
                          <Badge
                            variant="secondary"
                            className="text-xs px-2 py-1 rounded-full pointer-events-none"
                          >
                            {tech}
                          </Badge>
                        ))}
                      </div>
                      </div>

                    {/* Actions - Positioned absolutely at bottom */}
                    <div class="absolute bottom-8 left-8 flex items-center gap-4">
                      {project.url && (
                        <button
                          data-href={project.url}
                          class="inline-flex items-center gap-1.5 text-sm text-muted-foreground hover:text-foreground transition-colors project-link-button"
                          aria-label={`View ${project.name} live demo`}
                        >
                          <ExternalLink className="h-4 w-4" />
                          <span>Demo</span>
                        </button>
                      )}
                      {project.repository && (
                        <button
                          data-href={project.repository}
                          class="inline-flex items-center gap-1.5 text-sm text-muted-foreground hover:text-foreground transition-colors project-link-button"
                          aria-label={`View ${project.name} source code`}
                        >
                          <GitHubLogoIcon className="h-4 w-4" />
                          <span>Code</span>
                        </button>
                      )}
                    </div>

                    <div class="absolute bottom-8 right-8">
                      <span class="inline-flex items-center gap-1.5 text-sm font-medium group-hover:text-primary transition-colors">
                        <span>View Project</span>
                        <ArrowRight className="h-4 w-4 group-hover:translate-x-1 transition-transform" />
                      </span>
                    </div>
                  </div>
                </div>
              </article>
            </a>
          ))}
        </div>
      </div>
    </main>
    <Footer />
  </div>
</BaseLayout>

<script>
  // Handle project button clicks
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.project-link-button').forEach(button => {
      button.addEventListener('click', (event) => {
        event.preventDefault();
        event.stopPropagation();
        const target = event.currentTarget as HTMLButtonElement;
        const href = target.dataset.href;
        if (href) {
          window.open(href, '_blank');
        }
      });
    });
  });
</script>
